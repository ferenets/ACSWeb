// <auto-generated />
using ACSWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace ACSWeb.Migrations
{
    [DbContext(typeof(GTSContext))]
    partial class GTSContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("ACSWeb.Models.GPA", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CompShopNumber");

                    b.Property<string>("GTDType");

                    b.Property<int>("KSID");

                    b.Property<int>("StationNumber");

                    b.Property<string>("Type");

                    b.Property<string>("VCNType");

                    b.HasKey("ID");

                    b.HasIndex("KSID");

                    b.ToTable("GPA");
                });

            modelBuilder.Entity("ACSWeb.Models.KS", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("LVUID");

                    b.Property<string>("Name");

                    b.Property<int>("PipelineID");

                    b.HasKey("ID");

                    b.HasIndex("LVUID");

                    b.HasIndex("PipelineID");

                    b.ToTable("KS");
                });

            modelBuilder.Entity("ACSWeb.Models.LVU", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int>("UMGID");

                    b.HasKey("ID");

                    b.HasIndex("UMGID");

                    b.ToTable("LVU");
                });

            modelBuilder.Entity("ACSWeb.Models.Pipeline", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Pipeline");
                });

            modelBuilder.Entity("ACSWeb.Models.SAK", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CommisioningDate");

                    b.Property<int>("GPAID");

                    b.Property<string>("MTBase");

                    b.Property<string>("Manufacturer");

                    b.Property<string>("Name");

                    b.Property<int>("SAKTypeID");

                    b.Property<string>("Seller");

                    b.HasKey("ID");

                    b.HasIndex("GPAID")
                        .IsUnique();

                    b.HasIndex("SAKTypeID");

                    b.ToTable("SAK");
                });

            modelBuilder.Entity("ACSWeb.Models.SAKType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("TypeName");

                    b.HasKey("ID");

                    b.ToTable("SAKType");
                });

            modelBuilder.Entity("ACSWeb.Models.UMG", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<string>("Name");

                    b.Property<string>("ShortName");

                    b.HasKey("ID");

                    b.ToTable("UMG");
                });

            modelBuilder.Entity("ACSWeb.Models.GPA", b =>
                {
                    b.HasOne("ACSWeb.Models.KS", "KS")
                        .WithMany("GPAList")
                        .HasForeignKey("KSID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ACSWeb.Models.KS", b =>
                {
                    b.HasOne("ACSWeb.Models.LVU", "LVU")
                        .WithMany("KSList")
                        .HasForeignKey("LVUID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ACSWeb.Models.Pipeline", "Pipeline")
                        .WithMany("KSList")
                        .HasForeignKey("PipelineID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ACSWeb.Models.LVU", b =>
                {
                    b.HasOne("ACSWeb.Models.UMG", "UMG")
                        .WithMany("VLUList")
                        .HasForeignKey("UMGID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ACSWeb.Models.SAK", b =>
                {
                    b.HasOne("ACSWeb.Models.GPA", "GPA")
                        .WithOne("SAK")
                        .HasForeignKey("ACSWeb.Models.SAK", "GPAID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ACSWeb.Models.SAKType", "SAKType")
                        .WithMany()
                        .HasForeignKey("SAKTypeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
